import { useMenu } from "../context/MenuContext";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import styles from "../styles/index.module.scss";

import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import "swiper/css/effect-creative";
import { EffectCreative } from "swiper/modules";

const Menu = () => {
  const { menuItems, removeFromMenu, menuCount } = useMenu();

  return (
    <>
      <Head>
        <title>Menu</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className={styles.Menu}>
        <h1>Menu</h1>
        <header>
          <Swiper
            grabCursor={true}
            effect={"creative"}
            creativeEffect={{
              prev: {
                shadow: true,
                translate: [0, 0, -400],
              },
              next: {
                translate: ["100%", 0, 0],
              },
            }}
            modules={[EffectCreative]}
          >
            {menuItems.map((item, index) => (
              <SwiperSlide key={index}>
                <section>
                  <Image
                    src={item.image}
                    width={300}
                    height={300}
                    alt={`Producto ${index + 1}`}
                    priority={false}
                  />
                  <p>{item.name}</p>
                  <p>
                    {item.price} $
                  </p>
                </section>
              </SwiperSlide>
            ))}
          </Swiper>
        </header>
      </main>
      <div>
      <button>-</button><span>count</span><button>+</button>
      </div>
      <Link href={"/AdminPage"}>AdminPAge</Link>
    </>
  );
};

export default Menu;

import React, { createContext, useContext, useState, useEffect } from 'react';

const MenuContext = createContext();

export const useMenu = () => {
  const context = useContext(MenuContext);
  if (!context) {
    throw new Error("useMenu must be used within a MenuProvider");
  }
  return context;
};

export const MenuProvider = ({ children }) => {
  const [menuItems, setMenuItems] = useState([]);

  useEffect(() => {
    const storedMenuItems = localStorage.getItem('menuItems');
    if (storedMenuItems) {
      setMenuItems(JSON.parse(storedMenuItems));
    }
  }, []);

  const addToMenu = (item) => {
    const existingItemIndex = menuItems.findIndex(
      (menuItem) => menuItem.id === item.id && menuItem.origin === item.origin
    );

    if (existingItemIndex !== -1) {
      const updatedMenu = [...menuItems];
      updatedMenu[existingItemIndex].quantity += item.quantity;
      setMenuItems(updatedMenu);
      localStorage.setItem('menuItems', JSON.stringify(updatedMenu));
    } else {
      const updatedMenu = [...menuItems, item];
      setMenuItems(updatedMenu);
      localStorage.setItem('menuItems', JSON.stringify(updatedMenu));
    }
  };

  const removeFromMenu = (item) => {
    const updatedMenu = menuItems.filter(
      (menuItem) => !(menuItem.id === item.id && menuItem.origin === item.origin)
    );
    setMenuItems(updatedMenu);
    localStorage.setItem('menuItems', JSON.stringify(updatedMenu));
  };

  const menuCount = menuItems.length;

  return (
    <MenuContext.Provider value={{ menuItems, setMenuItems, addToMenu, removeFromMenu, menuCount }}>
      {children}
    </MenuContext.Provider>
  );
};

quiero una funcion que sea como addtomenu que se llame addtoorder para mi boton de + y otar que se llama removetoOrder para mi boton de menos y que la cantidad se muestre en el span y una pagina llamada sentOrder donse se vean los items agregados con la diferencia de que en addtomenu solo pueds agregar un items y en addtoorder puedes debe poder agregar todos los que quieras