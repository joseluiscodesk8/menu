// pages/SendOrder.jsx
import { useState, useMemo } from "react";
import { useMenu } from "../context/MenuContext";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import styles from "../styles/index.module.scss";

const SendOrder = () => {
  const { orderItems, addToOrder, removeFromOrder } = useMenu();
  const [orderNumber, setOrderNumber] = useState("");
  const [orderSent, setOrderSent] = useState(false);

  const handleSendOrder = async () => {
    const orderNum = parseInt(orderNumber, 10);
    if (!orderNumber || isNaN(orderNum) || orderNum < 1 || orderNum > 14) {
      alert("Please enter a valid order number between 1 and 14");
      return;
    }
  
    try {
      const response = await fetch('/api/send-order', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          orderItems,
          tableNumber: orderNumber,
        }),
      });
  
      const data = await response.json();
      if (response.ok) {
        setOrderSent(true);
        setOrderNumber("");
        // Optionally, clear the orderItems or handle post-submit actions here
      } else {
        alert(data.error || 'Error sending order');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred while sending the order');
    }
  };

  const calculateTotal = () => {
    return orderItems.reduce((total, item) => total + item.price * item.quantity, 0);
  };

  const total = useMemo(calculateTotal, [orderItems]);

  return (
    <>
      <Head>
        <title>Send Order</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className={styles.sendOrder}>
        <h1>Your Order</h1>
        {orderItems.length === 0 ? (
          <p>No items in the order.</p>
        ) : (
          orderItems.map((item, index) => (
            <header key={index}>
              <section>
                <Image
                  src={item.image}
                  width={100}
                  height={100}
                  alt={`Order item ${index + 1}`}
                  priority={false}
                />
                <div className={styles.textContainer}>
                  <p>{item.name}</p>
                  <p>{item.price} $</p>
                </div>
                <div className={styles.orderContainer}>
                  <button
                    className={styles.sendOrder}
                    onClick={() => addToOrder(item)}
                  >
                    +
                  </button>
                  <p>{item.quantity}</p>
                  <button
                    className={styles.sendOrder}
                    onClick={() => removeFromOrder(item)}
                  >
                    -
                  </button>
                </div>
              </section>
            </header>
          ))
        )}
        <h2>Total: {total.toFixed(2)} $</h2>
        <aside>
          <input
            type="number"
            value={orderNumber}
            onChange={(e) => setOrderNumber(e.target.value)}
            placeholder="Numero de mesa"
            min="1"
            max="14"
          />
          <button onClick={handleSendOrder}>Enviar Orden</button>
        </aside>
        {orderSent && <p>Orden enviada</p>}
      </main>
      <Link href={"/Kitchen"}>Kitchen</Link>
      <Link href={"/"}>Menu</Link>
    </>
  );
};

export default SendOrder;